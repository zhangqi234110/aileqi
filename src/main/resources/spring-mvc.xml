<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <!-- 对静态资源文件的访问-->
    <!-- <mvc:resources mapping="/images/**"  location="/images/"/>
    <mvc:resources mapping="/css/**"  location="/css/" />
    <mvc:resources mapping="/js/**"  location="/js/" />
    <mvc:resources mapping="/favicon.ico"  location="favicon.ico" /> -->
    <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--
                /**的意思是所有文件夹及里面的子文件夹
                /*是所有文件夹，不含子文件夹
                /是web项目的根目录
              -->
            <mvc:mapping path="/**" />
            <!-- 需排除拦截的地址 mvc:exclude-mapping-->
            <mvc:exclude-mapping path="/user"/>
            <mvc:exclude-mapping path="/message"/>
            <mvc:exclude-mapping path="/code"/>
            <mvc:exclude-mapping path="/register"/>
            <mvc:exclude-mapping path="/img/*"></mvc:exclude-mapping>
            <mvc:exclude-mapping path="/js/*"></mvc:exclude-mapping>
            <bean id="commonInterceptor" class="com.ssm.intercepter.MemberIntercepter"></bean> <!--这个类就是我们自定义的Interceptor -->
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
    </mvc:interceptors>

    <!-- 扫描web相关的bean -->
    <context:component-scan base-package="com.ssm.controller"/>

    <!-- 开启SpringMVC注解模式 -->
    <mvc:annotation-driven/>

    <!-- 静态资源默认servlet配置 -->
    <mvc:default-servlet-handler/>

    <!-- 配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>



</beans>